# create a new makefile command that looks like this
# hello:
#     touch inside_file
new_contents := "hello:\n\ttouch inside_file"

all:
# make a directory -p subdir - (--parents) make parent directories as needed
	mkdir -p subdir

# all three work, but the best one is the last one, I think...
# first it prints the make command we just did
# second it uses `sed -e` (--expression=script add the conts of script-file to the commands to be execture) 
# third it uses 's/^ //' replaces from the start of the first line replace the space with nothing  
# forth is sends the output command and creates the file `Makefile`into subdir/Makefile

#	printf $(new_contents) > subdir/Makefile
#	printf $(new_contents) | sed 's/^ //' > subdir/Makefile
	printf $(new_contents) | sed -e 's/^ //' > subdir/Makefile

# Change dir into subdir and exectue `make` with the $(MAKE) command variable
	cd ./subdir && $(MAKE)

clean:
	rm -rf subdir